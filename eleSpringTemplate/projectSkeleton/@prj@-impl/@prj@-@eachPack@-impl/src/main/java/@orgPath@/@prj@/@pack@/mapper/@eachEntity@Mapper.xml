<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.ele.@prj@.@pack@.mapper.@entity@Mapper">

	<resultMap id="@entity@"
		type="me.ele.@prj@.@pack@.model.@entity@">
		<result property="id" column="id" />
		@<@
		<result property="@eachAtt@" column="@_eachAtt@" />
		@>@
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
			id 
			,@_eachAtt@
		]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">

		INSERT INTO tb@_entity@ (
		id
		@<@
		<if test="@Ognl@isNotNull(@eachAtt@)">
			,@_eachAtt@
		</if>
		@>@
		
		) VALUES (
		#{id}
		@<@
		<if test="@Ognl@isNotNull(@eachAtt@)">
			,#{@eachAtt@}
		</if>
		@>@
		)
	</insert>

	<update id="update">

		UPDATE tb@_entity@
		<set>
			@<@
			<if test="@Ognl@isNotNull(@eachAtt@)">
				@_eachAtt@ = #{@eachAtt@},
			</if>
			@>@
		</set>
		WHERE
		id = #{id}

	</update>

	<delete id="delete">
		<![CDATA[
        DELETE FROM tb@_entity@
        WHERE
        id = #{id} 
    	]]>
	</delete>

	<delete id="deleteMultiple">
		DELETE FROM tb@_entity@
		WHERE
		id in
		<foreach collection="list" item="id" index="index" open="("
			close=")" separator=",">
			#{id}
		</foreach>
	</delete>

	<select id="getById" resultMap="@entity@">
		SELECT
		<include refid="columns" />
		<![CDATA[
		    FROM tb@_entity@ as tb@_entity@
	        WHERE 
		    id = #{id} 
	    ]]>
	</select>

	<select id="getByMultipleId" resultMap="@entity@">
		SELECT
		<include refid="columns" />
		FROM tb@_entity@ as tb@_entity@
		WHERE
		id in
		<foreach collection="list" item="id" index="index" open="("
			close=")" separator=",">
			#{id}
		</foreach>
	</select>

	<sql id="where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(idNotEq)">
				AND id &lt;&gt; #{idNotEq}
			</if>
			<if test="@Ognl@isNotEmpty(idGT)">
				AND id &gt; #{idGT}
			</if>
			<if test="@Ognl@isNotEmpty(idLT)">
				AND id &lt; #{idLT}
			</if>
			<if test="@Ognl@isNotEmpty(idGE)">
				AND id &gt;= #{idGE}
			</if>
			<if test="@Ognl@isNotEmpty(idLE)">
				AND id &lt;= #{idLE}
			</if>
			<if test="@Ognl@isNotEmpty(idList)">
				AND id in
				<foreach collection="idList" item="id" index="index" open="("
					close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="@Ognl@isNotEmpty(idNotEqList)">
				AND id not in
				<foreach collection="idNotEqList" item="id" index="index"
					open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>

			@<@
			<if test="@Ognl@isNotEmpty(@eachAtt@)">
				AND @_eachAtt@ = #{@eachAtt@}
			</if>
			<if test="@Ognl@isNotEmpty(@eachAtt@NotEq)">
				AND @_eachAtt@ &lt;&gt; #{@eachAtt@NotEq}
			</if>
			<if test="@Ognl@isNotEmpty(@eachAtt@GT)">
				AND @_eachAtt@ &gt; #{@eachAtt@GT}
			</if>
			<if test="@Ognl@isNotEmpty(@eachAtt@LT)">
				AND @_eachAtt@ &lt; #{@eachAtt@LT}
			</if>
			<if test="@Ognl@isNotEmpty(@eachAtt@GE)">
				AND @_eachAtt@ &gt;= #{@eachAtt@GE}
			</if>
			<if test="@Ognl@isNotEmpty(@eachAtt@LE)">
				AND @_eachAtt@ &lt;= #{@eachAtt@LE}
			</if>
			<if test="@Ognl@isNotEmpty(@eachAtt@List)">
				AND @_eachAtt@ in
				<foreach collection="@eachAtt@List" item="id" index="index"
					open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="@Ognl@isNotEmpty(@eachAtt@NotEqList)">
				AND @_eachAtt@ not in
				<foreach collection="@eachAtt@NotEqList" item="id" index="index"
					open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			@>@
		</where>
	</sql>

	<select id="count" resultType="int">
		SELECT count(*) FROM tb@_entity@ as tb@_entity@
		<include refid="where" />
	</select>

		<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findPage" resultMap="@entity@">
		SELECT
		<include refid="columns" />
		FROM tb@_entity@ as tb@_entity@
		<include refid="where" />
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		<if test="@Ognl@isNotEmpty(offset)">
			limit #{offset},#{limit}
		</if>
	</select>

	<select id="findList" resultMap="@entity@">
		SELECT
		<include refid="columns" />
		FROM tb@_entity@ as tb@_entity@
		<include refid="where" />
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>



</mapper>